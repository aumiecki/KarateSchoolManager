'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="karate")>  _
Partial Public Class KarateClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMember(instance As Member)
    End Sub
  Partial Private Sub UpdateMember(instance As Member)
    End Sub
  Partial Private Sub DeleteMember(instance As Member)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.KarateSchoolManager.My.MySettings.Default.karateConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Instructors() As System.Data.Linq.Table(Of Instructor)
		Get
			Return Me.GetTable(Of Instructor)
		End Get
	End Property
	
	Public ReadOnly Property Members() As System.Data.Linq.Table(Of Member)
		Get
			Return Me.GetTable(Of Member)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Instructors")>  _
Partial Public Class Instructor
	
	Private _ID As System.Nullable(Of Short)
	
	Private _Last_Name As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="SmallInt")>  _
	Public Property ID() As System.Nullable(Of Short)
		Get
			Return Me._ID
		End Get
		Set
			If (Me._ID.Equals(value) = false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Last_Name", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Last_Name() As String
		Get
			Return Me._Last_Name
		End Get
		Set
			If (String.Equals(Me._Last_Name, value) = false) Then
				Me._Last_Name = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Members")>  _
Partial Public Class Member
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Short
	
	Private _Last_Name As String
	
	Private _First_Name As String
	
	Private _Phone As String
	
	Private _Date_Joined As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Short)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLast_NameChanging(value As String)
    End Sub
    Partial Private Sub OnLast_NameChanged()
    End Sub
    Partial Private Sub OnFirst_NameChanging(value As String)
    End Sub
    Partial Private Sub OnFirst_NameChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnDate_JoinedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDate_JoinedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Short
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Last_Name", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Last_Name() As String
		Get
			Return Me._Last_Name
		End Get
		Set
			If (String.Equals(Me._Last_Name, value) = false) Then
				Me.OnLast_NameChanging(value)
				Me.SendPropertyChanging
				Me._Last_Name = value
				Me.SendPropertyChanged("Last_Name")
				Me.OnLast_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_First_Name", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property First_Name() As String
		Get
			Return Me._First_Name
		End Get
		Set
			If (String.Equals(Me._First_Name, value) = false) Then
				Me.OnFirst_NameChanging(value)
				Me.SendPropertyChanging
				Me._First_Name = value
				Me.SendPropertyChanged("First_Name")
				Me.OnFirst_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="NVarChar(30)")>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me.OnPhoneChanging(value)
				Me.SendPropertyChanging
				Me._Phone = value
				Me.SendPropertyChanged("Phone")
				Me.OnPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Date_Joined", DbType:="SmallDateTime")>  _
	Public Property Date_Joined() As System.Nullable(Of Date)
		Get
			Return Me._Date_Joined
		End Get
		Set
			If (Me._Date_Joined.Equals(value) = false) Then
				Me.OnDate_JoinedChanging(value)
				Me.SendPropertyChanging
				Me._Date_Joined = value
				Me.SendPropertyChanged("Date_Joined")
				Me.OnDate_JoinedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
